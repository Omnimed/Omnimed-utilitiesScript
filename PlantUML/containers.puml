' #######################
' Container Definitions
' #######################

!include https://raw.githubusercontent.com/Omnimed/Omnimed-utilitiesScript/master/PlantUML/technologies.puml

!define CONTAINER_API_ACTIONLINK Container(actionLinkApi, "API ActionLink", "SPRINGBOOT2", "API de création/accès de liens")
!define CONTAINER_API_ADMINISTRATIVE Container(administrativeApi, "API Administrative", "SPRINGBOOT2", "API de gestion de données administratives")
!define CONTAINER_API_ACCESSIDENTITY Container(accessIdentityApi, "API Access identity", "SPRINGBOOT2", "API de gestion des utilisateurs")
!define CONTAINER_API_DOCUMENTFILE Container(documentFileApi, "API sécurisé DocumentFile", "SPRINGBOOT2", "API sécurisé de document file")
!define CONTAINER_API_DICTIONARY Container(dictionaryFileApi, "API de dictionnaire", "SPRINGBOOT2", "API de dictionnaire")
!define CONTAINER_API_DOCUMENTFILEFRONTEND Container(documentFileFrontendApi, "API public DocumentFile", "SPRINGBOOT2", "API public pour les actions liées au frontend patient-portal-prequel")
!define CONTAINER_API_ENGINE Container(engineApi, "API Engine", "SPRINGBOOT2", "API de journalisation des intrants et extrants en lien avec les interfaces")
!define CONTAINER_API_FILE Container(fileApi, "Api File", "SPRING", "Api de fichiers")
!define CONTAINER_API_GATEWAY Container(gatewayApi, "API gateway", "SPRINGBOOT2", "API gateway nord-sud")
!define CONTAINER_API_INSTITUTION Container(institutionApi, "API sécurisé Institution", "SPRINGBOOT2", "API sécurisé d'institutions")
!define CONTAINER_API_PATIENTDOCUMENTREQUESTS Container(patientDocumentRequestApi, "API PatientDocumentRequests", "SPRINGBOOT2", "API de gestion de documents patient")
!define CONTAINER_API_PATIENTDOCUMENTUPLOADED Container(patientDocumentUploadedApi, "API PatientDocumentUploaded", "SPRINGBOOT2", "API de téléversement de document patient à partir du frontend-transmission")
!define CONTAINER_API_PRESCRIBEIT Container(prescribeitApi, "Api-PrescribeIt", "SPRINGBOOT2", "Application du domaine PrescribeIt")
!define CONTAINER_API_USERCONFIGURATION Container(userconfigurationApi, "API sécurisé UserConfiguration", "SPRINGBOOT2", "API sécurisé de Config Utilisateurs")
!define CONTAINER_HL7_IMPORTER Container(hl7Importer, "Service d'importation de messages HL7", "SPRINGBOOT2, Camel", "Service d'importation de messages HL7")
!define CONTAINER_CLINICALNOTE_PUSH Container(clinicalNotePush, "Service de push de la note clinique", "SPRINGBOOT2, Camel", "Service de push de la note clinique")
!define CONTAINER_API_INTERNALPUSH Container(internalPushApi, "API Internal Push", "SPRINGBOOT2", "API de push interne")
!define CONTAINER_ADMINISTRATIVE Container(Administrative, "Administrative", "SPRINGBOOT2", "Application pour gérer les évènements associées aux données administratives")
!define CONTAINER_ACTIVEMQ Container(activemq, "Activemq", "UBUNTU_14, ACTIVEMQ", "Agent de messages")
!define CONTAINER_ACTIVEMQ01 Container(activemq01, "Activemq01", "UBUNTU_14, ACTIVEMQ 01", "Agent de messages du DMÉ")
!define CONTAINER_ACTIVEMQ02 Container(activemq02, "Activemq02", "UBUNTU_14, ACTIVEMQ 02", "Agent de messages du DMÉ")
!define CONTAINER_ACTIVEMQ03 Container(activemq03, "Activemq03", "UBUNTU_14, ACTIVEMQ 03", "Agent de messages du PORTAIL-PATIENT")
!define CONTAINER_ARTIFACTORY Container(artifactory, "jFrog Artifactory", "jFrog Artifactory", "Serveur d'Artifact jFrog")
!define CONTAINER_AUTHORIZATION Container(authorization, "Authorization", "UBUNTU_14, KARAF_4", "Service d'authentification OAUTH2")
!define CONTAINER_BROKER Container(broker, "Broker", "UBUNTU_14 , SPRINGBOOT", "Système de messagerie par Inscription")
!define CONTAINER_CALENDAR Container(calendar, "Api-Calendar", "SPRINGBOOT2", "Application du domaine calendrier")
!define CONTAINER_CAS Container(cas, "CAS", "UBUNTU_14 , TOMCAT_7, CAS_35", "Service central d'authentification")
!define CONTAINER_COMMON Container(common, "Common", "VIRGO_SERVER, VIRGO_STACK", "Ensemble des services cliniques et administratifs.")
!define CONTAINER_COMMON_LITE Container(commonLite, "CommonLite", "VIRGO_SERVER, VIRGO_STACK", "Ensemble des services d'impression de notes cliniques.")
!define CONTAINER_CONFIGSERVER Container(configServer, "Config Server", "UBUNTU_14 , SPRINGBOOT", "Système de configuration des systèmes")
!define CONTAINER_CRON Container(cron, "CRON Task", "Quartz", "Tâche cédulée avec Quartz")
!define CONTAINER_INT_DOCUMENTS_GASPESIE Container(intDocumentsGaspesie, "Documents numérisés Grand Gaspé", "SPRINGBOOT2, Camel", "Interface documents numérisés pour la région du Grand Gaspé")
!define CONTAINER_DSQ_LABORATORY Container(omnimed_dsq_laboratory, "Dsq Laboratory", "SPRINGBOOT", "API Laboratoire DSQ")
!define CONTAINER_ENGINE Container(engine, "Engine", "VIRGO_SERVER, VIRGO_STACK", "Service de journalisation et d'adaptation de communications")
!define CONTAINER_ENGINE_CNESST_RELAY Container(omnimed_engine_cnesst_relay, "Engine CNESST relay", "SPRINGBOOT", "Relai les rapports médicaux et pièces jointes de la route push CNESST aux services web de la CNESST correspondants.")
!define CONTAINER_ENGINE_LIVE Container(engine_live, "EngineLive", "VIRGO_SERVER, VIRGO_STACK", "Service de journalisation et d'adaptation de communications live")
!define CONTAINER_FILE_VALIDATION Container(fileValidation, "File Validation Pod", "clamav", "Pod de validation de fichiers malicieux en utilisant ClamAv")
!define CONTAINER_FRONTEND_DOCUMENTS_RECEPTION Container(frontendPatientDocumentsReception, "FrontendPatientDocumentsReception", "Angular", "Application frontend Angular affichant la bannière de réception de documents patient.")
!define CONTAINER_FRONTEND_DOCUMENTS_REVIEW Container(frontendDocumentsReview, "FrontendDocumentsReview", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_PORTAL Container(frontendPortal, "FrontendPortal", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_DOCUMENTS_TRANSMISSION Container(frontendDocumentsTransmission, "FrontendDocumentsTransmission", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_HEALTHRECORD_ACTION_LOG Container(frontendHealthrecordActionLog, "frontendHealthrecordActionLog", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_HEALTHRECORD_FORM_SELECTION Container(frontendHealthrecordFormSelection, "frontendHealthrecordActionLog", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_PRESCRIBEIT Container(frontendPrescribeIt, "frontendPrescribeIt", "Angular", "Application frontend Angular")
!define CONTAINER_FRONTEND_TRANSMISSION Container(frontendTransmission, "frontendTransmission", "Angular", "Application frontend Angular")
!define CONTAINER_HAPROXY Container(haproxy, "HaProxy", "HAPROXY_2212", "HaProxy")
!define CONTAINER_HR Container(hr, "Healthrecord", "VIRGO_SERVER, VIRGO_HR_STACK", "Application principale du dossier médicale")
!define CONTAINER_IMPORT_RESULT Container(result_importer, "Importation des résultats", "WINDOWS_SERVER_2003, DELPHI_7")
!define CONTAINER_INTERFACES Container(interfaces, "Interfaces", "VIRGO_SERVER, VIRGO_STACK", "Services de traitement en lot")
!define CONTAINER_JASPER Container(jasperServer, "Jasper Server", "JASPER_SERVER", "Services de traitement en lot")
!define CONTAINER_KAFKA_EMR Container(kafkaEmr, "Kafka EMR", "Apache Kafka sur Kubernetes", "Services de messagerie Kafka pour DME")
!define CONTAINER_KAFKA_PORTAL Container(kafkaPortal, "Kafka Portal", "Apache Kafka sur Kubernetes", "Services de messagerie Kafka pour portail patient")
!define CONTAINER_MASTERLUCENE Container(masterLucene, "MasterLucene", "VIRGO_SERVER, VIRGO_HR_STACK", "Serveur d'indexation Lucene")
!define CONTAINER_MEDICATION Container(medication, "Api-Medication", "SPRINGBOOT2", "Application du domaine médication")
!define CONTAINER_MESSAGE_CONSUMER Container(message_consumer, "Message Consumer", "SPRINGBOOT", "Système de messagerie par Inscription")
!define CONTAINER_ORACLE ContainerDb(oracle_database, "Base de données Oracle", "ORACLE_LINUX, ORACLE_10")
!define CONTAINER_ORACLE_AQ Container(oracle_database_aq, "Base de données Oracle Advanced Queuing", "ORACLE_LINUX, ORACLE_10")
!define CONTAINER_PATIENT_DOCUMENT_REQUEST Container(patientDocumentRequest, "Patient Document Request", "SPRINGBOOT2", "Application Springboot pour communiquer avec le module de requête de documents du Portail Patient à partir du DMÉ")
!define CONTAINER_PATIENT_PORTAL_PREQUEL Container(portail_patient_prequel, "Portail Patient", "SPRINGBOOT2", "Application Springboot/MVC pour la communication entre les patients et le DMÉ")
!define CONTAINER_POSTGRES ContainerDb(postgres_database, "Base de données Postgresql", "UBUNTU_18, POSTGRES_9")
!define CONTAINER_POSTGRES_PATIENT_PORTAL ContainerDb(postgresPatientPortal, "Base de données Postgresql", "UBUNTU_18, POSTGRES_11")
!define CONTAINER_QUARTZ_SCHEDULED_TASK Container(quartz_scheduled_task, "Quartz Scheduled Task", "SPRINGBOOT2", "Processus de tâches planifiées")
!define CONTAINER_RABBITMQ Container(rabbitmq, "RabbitMQ", "UBUNTU_14, RABBITMQ")
!define CONTAINER_REQUEST Container(request, "Api Request", "SPRINGBOOT2", "Application de gestion des dictionnaires de requêtes et des ordonnances")
!define CONTAINER_SAFIR Container(safir, "Safir Proxy", "VIRGO_SERVER, VIRGO_STACK", "Service de communication pour les requêtes de l'APSS desservie par le système SAFIR")
!define CONTAINER_SFTP Container(sftp, "Serveur de transfert de fichier", "UBUNTU_14, SFTP", "Serveurs de réception de messages par fichiers")
!define CONTAINER_SINGLE_PAGE_APPLICATION Container(single_page_application, "Application web monopage", "JSF, AngularJS, Angular", "Donne accès à l'ensemble des fonctionnalités du DME")
!define CONTAINER_TOGGLZ Container(togglz, "Togglz", "SPRINGBOOT2", "Application d'activation / désactivation de fonctionnalités")
!define CONTAINER_TRANSMISSION Container(transmission, "Transmission", "SPRINGBOOT2", "Application de transmission de fax/sms/courriel")
!define CONTAINER_WINDOWS_IMPORT Container(windows_import, "Serveur d'importation Labo", "Windows Server, Borland Delphi 7", "Serveur d'importation de données de laboratoire.")